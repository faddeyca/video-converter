# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets, QtGui, QtMultimedia, QtMultimediaWidgets
from PyQt5.QtCore import *
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5 import uic
from PyQt5.QtMultimedia import *
from PyQt5.QtMultimediaWidgets import *

from frames_extractor import extract_frames
from video_merger import merge_video


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.newVideo_button = QtWidgets.QPushButton(self.centralwidget)
        self.newVideo_button.setGeometry(QtCore.QRect(10, 10, 81, 23))
        self.newVideo_button.setObjectName("newVideo_button")
        self.slider = QtWidgets.QSlider(self.centralwidget)
        self.slider.setGeometry(QtCore.QRect(20, 500, 751, 22))
        self.slider.setOrientation(QtCore.Qt.Horizontal)
        self.slider.setObjectName("slider")
        self.apply_nutton = QtWidgets.QPushButton(self.centralwidget)
        self.apply_nutton.setGeometry(QtCore.QRect(710, 10, 75, 23))
        self.apply_nutton.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.apply_nutton.setCheckable(False)
        self.apply_nutton.setChecked(False)
        self.apply_nutton.setObjectName("apply_nutton")
        self.widget = QVideoWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(10, 50, 771, 431))
        self.widget.setObjectName("widget")
        MainWindow.setCentralWidget(self.centralwidget)

        self.add_functions()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Видеоредактор"))
        self.newVideo_button.setText(_translate("MainWindow", "New video"))
        self.apply_nutton.setText(_translate("MainWindow", "Apply"))

    def add_functions(self):
        self.videoOutput = self.makeVideoWidget()
        self.mediaPlayer = self.makeMediaPlayer()
        self.newVideo_button.clicked.connect(self.newVideo_button_action)

    def makeMediaPlayer(self):
        mediaPlayer = QMediaPlayer()
        mediaPlayer.setVideoOutput(self.videoOutput)
        return mediaPlayer

    def makeVideoWidget(self):
        videoOutput = QVideoWidget()
        vbox = QVBoxLayout()
        vbox.addWidget(videoOutput)
        self.widget.setLayout(vbox)
        return videoOutput
    
    def newVideo_button_action(self):
        path = QFileDialog.getOpenFileName(self,
                                             'Open file',
                                             '/home',
                                             'All files (*.*)',
                                             options=QtGui.QFileDialog.DontUseNativeDialog)
        filepath = path[0]
        if path == "":
            return
        self.mediaPlayer.setMediaObject(QMediaContent(QUrl(path)))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
